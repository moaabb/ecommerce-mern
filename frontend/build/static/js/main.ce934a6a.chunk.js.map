{"version":3,"sources":["constants/userConstants.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","constants/productConstants.js","actions/productActions.js","components/Loader.js","components/Message.js","components/Paginate.js","components/ProductCarousel.js","components/Meta.js","Screens/HomeScreen.js","Screens/ProductScreen.js","constants/cartConstants.js","constants/orderConstants.js","Screens/ProfileScreen.js","actions/orderActions.js","actions/cartActions.js","Screens/CartScreen.js","components/FormContainer.js","Screens/LoginScreen.js","Screens/RegisterScreen.js","components/CheckoutSteps.js","Screens/ShippingScreen.js","Screens/PaymentScreen.js","Screens/PlaceOrderScreen.js","Screens/OrderScreen.js","Screens/UserListScreen.js","Screens/ProductListScreen.js","Screens/ProductEditScreen.js","Screens/UserEditScreen.js","Screens/OrderListScreen.js","App.js","reportWebVitals.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_LOGOUT","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","getUserDetails","id","dispatch","getState","a","type","userInfo","userLogin","config","headers","Authorization","token","axios","get","data","payload","response","message","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","Header","useDispatch","useSelector","state","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","localStorage","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","listProducts","pageNumber","listProductDetails","Loader","Spinner","animation","role","width","height","margin","display","Message","children","Alert","Paginate","pages","page","Pagination","Array","keys","map","x","active","ProductCarousel","productTopRated","loading","error","products","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","productList","sm","md","lg","xl","ProductScreen","qty","setQty","comment","setComment","setRating","productID","productCreateReview","successProductReview","success","errorProductReview","loadingProductReview","productDetails","loadingProduct","ListGroup","countInStock","disabled","reviews","length","review","createdAt","substring","post","console","log","createProductReview","Group","controlId","Label","row","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAN_ALL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_RESET","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","ORDERS_LIST_MY_REQUEST","ORDERS_LIST_MY_SUCCESS","ORDERS_LIST_MY_FAIL","ORDERS_LIST_REQUEST","ORDERS_LIST_SUCCESS","ORDERS_LIST_FAIL","ProfileScreen","location","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","userDetails","user","successUpdate","userUpdateProfile","orderListMy","loadingOrders","orders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","order","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","addToCart","setItem","JSON","stringify","cart","cartItems","CartScreen","search","Number","split","removeFromCartHandler","removeFromCart","item","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","redirect","login","RegisterScreen","userRegister","register","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","paymentMethod","setPaymentMethod","Check","label","checked","PlaceOrderScreen","orderCreate","successCreate","itemsPrice","shippingPrice","taxPrice","index","createOrder","orderItems","OrderScreen","orderID","sdkReady","setSdkReady","orderDetails","loadingDetails","orderPay","loadingPay","successPay","orderDeliver","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","currency","onSuccess","paymentResult","payOrder","UserListScreen","userList","users","successDelete","userDelete","deleteHandler","confirm","delete","deleteUser","ProductListScreen","productDelete","successDeleteProduct","deleteError","productCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setDescription","setCountInStock","setImage","setBrand","setCategory","uploading","setUploading","errorProduct","productUpdate","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","UserEditScreen","setIsAdmin","userID","userUpdate","alert","updateUser","OrderListScreen","orderList","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","existItem","find","filter","itemsFromStorage","getItem","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.ce934a6a.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\"\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\"\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\"\r\nexport const USER_LOGOUT = \"USER_LOGOUT\"\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\"\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\"\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\"\r\nexport const USER_REGISTER_LOGOUT = \"USER_REGISTER_LOGOUT\"\r\n\r\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\"\r\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\"\r\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\"\r\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\"\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\"\r\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS\"\r\nexport const USER_UPDATE_PROFILE_FAIL = \"USER_UPDATE_PROFILE_FAIL\"\r\nexport const USER_UPDATE_PROFILE_RESET = \"USER_UPDATE_PROFILE_RESET\"\r\n\r\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\"\r\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\"\r\nexport const USER_LIST_FAIL = \"USER_LIST_FAIL\"\r\nexport const USER_LIST_RESET = \"USER_LIST_RESET\"\r\n\r\nexport const USER_DELETE_REQUEST = \"USER_DELETE_REQUEST\"\r\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\"\r\nexport const USER_DELETE_FAIL = \"USER_DELETE_FAIL\"\r\n\r\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\"\r\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\"\r\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\"\r\nexport const USER_UPDATE_RESET = \"USER_UPDATE_RESET\"","import { USER_DELETE_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_RESET, USER_LIST_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS } from \"../constants/userConstants\"\r\nimport axios from 'axios'\r\n\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/users/login', { email, password }, config)\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message \r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({type: USER_LOGOUT})\r\n    dispatch({type: USER_REGISTER_LOGOUT})\r\n    dispatch({type: USER_LIST_RESET})\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/users/', {name, email, password }, config)\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message \r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message \r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/profile`, user,  config)\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message \r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserList = () => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users/`, config)\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message \r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/users/${id}`, config)\r\n\r\n        dispatch({ type: USER_DELETE_SUCCESS })\r\n    \r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message \r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.put(`/api/users/${user.id}`, user,  config)\r\n\r\n        dispatch({ type: USER_UPDATE_SUCCESS })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message \r\n        })\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst SearchBox = ({ history }) => {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword.trim()) {\r\n            history.push(`/search/${keyword}`)\r\n        } else {\r\n            history.push('/')\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control type='text' name='q' onChange={e => setKeyword(e.target.value)} placeholder='Search Products...' className='mr-sm-2 ml-sm-5'>\r\n            </Form.Control>\r\n            <Button type='submit' variant='outline-success' className='p-2'>\r\n                Search\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from 'react'\r\nimport { Container, Nav, Navbar, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { logout } from '../actions/userActions'\r\nimport SearchBox from './SearchBox'\r\n\r\nconst Header = ({history}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n\r\n    }\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>PROSHOP</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Route render={({ history }) => <SearchBox history={history} />} />\r\n                        <Nav className=\"ml-auto\">\r\n                        <LinkContainer to='/cart'>\r\n                            <Nav.Link> <i className='fas fa-shopping-cart'></i> Cart</Nav.Link>\r\n                        </LinkContainer>\r\n\r\n                        {userInfo ? \r\n                            \r\n                            <NavDropdown title={userInfo.name} id='username'>\r\n                                <LinkContainer to='/profile'>\r\n                                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <NavDropdown.Item onClick={logoutHandler}>Log Out</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                             : \r\n                            <LinkContainer to='/login'>\r\n                                <Nav.Link><i className='fas fa-user'></i> Sign In</Nav.Link>\r\n                            </LinkContainer>\r\n                        }\r\n\r\n                        {userInfo && userInfo.isAdmin && (\r\n                            <NavDropdown title='Admin' id='admin-menu'>\r\n                                <LinkContainer to='/admin/userlist'>\r\n                                    <NavDropdown.Item>User List</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to='/admin/productlist'>\r\n                                    <NavDropdown.Item>Product List</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to='/admin/orderlist'>\r\n                                    <NavDropdown.Item>Order List</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                            </NavDropdown>\r\n                        )}\r\n                        \r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col className='text-center py-3'>\r\n                    \r\n                    <footer>Copyright &copy; ProShop</footer>\r\n                    \r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n\r\n","import React from 'react'\r\n\r\nconst Rating = ({value, text, color}) => {\r\n    return (\r\n        <div className='ratings my-2'>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 1 \r\n                    ? 'fas fa-star'\r\n                    : value >= 0.5 \r\n                    ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }></i>\r\n            </span>\r\n            <span>\r\n                    <i style={{color}} className={\r\n                    value >= 2 \r\n                    ? 'fas fa-star'\r\n                    : value >= 1.5 \r\n                    ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }></i>\r\n            </span>\r\n            <span>\r\n                    <i style={{color}} className={\r\n                    value >= 3 \r\n                    ? 'fas fa-star'\r\n                    : value >= 2.5 \r\n                    ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }></i>\r\n            </span>\r\n            <span>\r\n                    <i style={{color}} className={\r\n                    value >= 4 \r\n                    ? 'fas fa-star'\r\n                    : value >= 3.5 \r\n                    ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }></i>\r\n            </span>\r\n            <span>\r\n                    <i style={{color}} className={\r\n                    value >= 5 \r\n                    ? 'fas fa-star'\r\n                    : value >= 4.5 \r\n                    ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }></i>\r\n            </span>\r\n            <span> {text ? text : ''}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: 'gold',\r\n}\r\nexport default Rating;\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Product = ({product}) => {\r\n    return (\r\n        <Card className='my-3 p-3 rounded'>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant='top'/>\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as='div' ><strong>{product.name}</strong></Card.Title>\r\n                </Link>\r\n                \r\n                <Card.Text as='div'>\r\n                    <Rating  value={product.rating} text={`${product.numReviews} reviews`}/> \r\n                </Card.Text>\r\n\r\n                <Card.Text as='h3'>${product.price}</Card.Text>   \r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","export const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\"\r\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\"\r\nexport const PRODUCT_LIST_FAIL = \"PRODUCT_LIST_FAIL\"\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\"\r\nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\"\r\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\"\r\n\r\nexport const PRODUCT_DELETE_REQUEST = \"PRODUCT_DELETE_REQUEST\"\r\nexport const PRODUCT_DELETE_SUCCESS = \"PRODUCT_DELETE_SUCCESS\"\r\nexport const PRODUCT_DELETE_FAIL = \"PRODUCT_DELETE_FAIL\"\r\n\r\nexport const PRODUCT_CREATE_REQUEST = \"PRODUCT_CREATE_REQUEST\"\r\nexport const PRODUCT_CREATE_SUCCESS = \"PRODUCT_CREATE_SUCCESS\"\r\nexport const PRODUCT_CREATE_FAIL = \"PRODUCT_CREATE_FAIL\"\r\nexport const PRODUCT_CREATE_RESET = \"PRODUCT_CREATE_RESET\"\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = \"PRODUCT_UPDATE_REQUEST\"\r\nexport const PRODUCT_UPDATE_SUCCESS = \"PRODUCT_UPDATE_SUCCESS\"\r\nexport const PRODUCT_UPDATE_FAIL = \"PRODUCT_UPDATE_FAIL\"\r\nexport const PRODUCT_UPDATE_RESET = \"PRODUCT_UPDATE_RESET\"\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = \"PRODUCT_CREATE_REVIEW_REQUEST\"\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = \"PRODUCT_CREATE_REVIEW_SUCCESS\"\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = \"PRODUCT_CREATE_REVIEW_FAIL\"\r\nexport const PRODUCT_CREATE_REVIEW_RESET = \"PRODUCT_CREATE_REVIEW_RESET\"\r\n\r\nexport const PRODUCT_TOP_REQUEST = \"PRODUCT_TOP_REQUEST\"\r\nexport const PRODUCT_TOP_SUCCESS = \"PRODUCT_TOP_SUCCESS\"\r\nexport const PRODUCT_TOP_FAIL = \"PRODUCT_TOP_FAIL\"\r\n","import { PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_SUCCESS, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_CREATE_FAIL, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_REQUEST, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_TOP_FAIL, PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, } from '../constants/productConstants'\r\nimport axios from 'axios'\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_LIST_REQUEST})\r\n\r\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\r\n        \r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message \r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_DETAILS_REQUEST})\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n        \r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message \r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({type: PRODUCT_DELETE_REQUEST})\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/products/${id}`, config)\r\n        \r\n        dispatch({ type: PRODUCT_DELETE_SUCCESS })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message \r\n        })\r\n    }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({type: PRODUCT_CREATE_REQUEST})\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/products/`, {}, config)\r\n        \r\n        dispatch({ \r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message \r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({type: PRODUCT_UPDATE_REQUEST})\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        \r\n        await axios.put(`/api/products/${product._id}`, product, config)\r\n        \r\n        dispatch({ \r\n            type: PRODUCT_UPDATE_SUCCESS\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message \r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (product, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({type: PRODUCT_CREATE_REVIEW_REQUEST})\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        \r\n        await axios.post(`/api/products/${product._id}/reviews`, review, config)\r\n        \r\n        dispatch({ \r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS\r\n        })\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message \r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_TOP_REQUEST})\r\n\r\n        const { data } = await axios.get(`/api/products/top`)\r\n        \r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message \r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner animation='border'\r\n            role='status' \r\n            style={{\r\n                width:'100px',\r\n                height:'100px',\r\n                margin:'auto',\r\n                display:'block'\r\n            }}>\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n  variant: 'info',\r\n}\r\n\r\nexport default Message","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst Paginate = ({ pages, page, keyword = '', isAdmin=false }) => {\n    return pages > 1 && (\n        <>\n            <Pagination>\n                {[...Array(pages).keys()].map(x => (\n                    <LinkContainer key={x+1} to={!isAdmin ? keyword ? `/search/${keyword}/page/${x+1}` : `/page/${x+1}` : `/admin/productlist/page/${x + 1}`}>\n                        <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n                    </LinkContainer>\n                ))}\n            </Pagination>\n\n        </>\n    )\n}\n\nexport default Paginate\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Carousel, Image } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from './Loader'\nimport Message from './Message'\nimport { listTopProducts } from '../actions/productActions'\n\nconst ProductCarousel = () => {\n  const dispatch = useDispatch()\n\n  const productTopRated = useSelector((state) => state.productTopRated)\n  const { loading, error, products } = productTopRated\n\n  useEffect(() => {\n    dispatch(listTopProducts())\n  }, [dispatch])\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n    <Carousel pause='hover' className='bg-dark'>\n      {products.map((product) => (\n        <Carousel.Item key={product._id}>\n          <Link to={`/product/${product._id}`}>\n            <Image src={product.image} alt={product.name} fluid />\n            <Carousel.Caption className='carousel-caption'>\n              <h2>\n                {product.name} (${product.price})\n              </h2>\n            </Carousel.Caption>\n          </Link>\n        </Carousel.Item>\n      ))}\n    </Carousel>\n  )\n}\n\nexport default ProductCarousel","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name='description' content={description} />\r\n      <meta name='keyword' content={keywords} />\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nMeta.defaultProps = {\r\n  title: 'Welcome To ProShop',\r\n  description: 'We sell the best products for cheap',\r\n  keywords: 'electronics, buy electronics, cheap electronics',\r\n}\r\n\r\nexport default Meta","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport { listProducts } from '../actions/productActions'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport Meta from '../components/Meta'\r\n\r\nconst HomeScreen =  ({ match }) => {\r\n    const keyword = match.params.keyword\r\n\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const productList = useSelector(state => state.productList)\r\n    const {loading, error, products, pages, page} = productList\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword, pageNumber))\r\n    }, [dispatch, keyword, pageNumber])\r\n\r\n    return (\r\n            <>\r\n                <Meta/>\r\n                {!keyword ? <ProductCarousel/> : <Link to='/' className='btn btn-light'>GO BACK</Link>}\r\n                <h1>Our Latest Products</h1>\r\n                {loading ? \r\n                <Loader/> : \r\n                error ? \r\n                <Message variant='danger'>{error}</Message> : \r\n                (\r\n                    <>\r\n                        <Row>\r\n                            {products.map(product => {\r\n                                return (\r\n                                    <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                    <Product product={product}/>                         \r\n                                    </Col>\r\n                                )\r\n                            })}\r\n                        </Row> \r\n                        <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''} ></Paginate>\r\n                    </>    \r\n                ) }\r\n                 \r\n            </>\r\n    )\r\n    \r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Meta from '../components/Meta'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\n\r\nconst ProductScreen = ({ match, history }) => {\r\n  const [qty, setQty] = useState(1)\r\n  const [comment, setComment] = useState('')\r\n  const [rating, setRating] = useState(0)\r\n  \r\n  const dispatch = useDispatch()\r\n  \r\n  const productID = match.params.id\r\n\r\n  const { success: successProductReview, error: errorProductReview, loading: loadingProductReview } = useSelector(state => state.productCreateReview)\r\n  \r\n  const { userInfo } = useSelector(state => state.userLogin)\r\n  \r\n  const productDetails = useSelector(state => state.productDetails)\r\n  const {loading: loadingProduct, error, product} = productDetails\r\n  \r\n\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n      setRating(0)\r\n      setComment('')\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n      dispatch(listProductDetails(productID))\r\n    }\r\n    if (!product._id || product._id !== productID) {\r\n      dispatch(listProductDetails(productID))\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n    }\r\n  }, [dispatch, productID, successProductReview, product])\r\n\r\n  const addToCartHandler = () => {\r\n      history.push(`/cart/${productID}?qty=${qty}`)\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(createProductReview(product, {rating, comment}))\r\n  }\r\n  return (\r\n      <>\r\n        <Meta title={product.name}/>\r\n        <Link className='btn btn-light my-3' to='/'>\r\n          Go Back\r\n        </Link>\r\n        {loadingProduct ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <>\r\n            <Meta title={product.name} />\r\n            <Row>\r\n              <Col md={6}>\r\n                <Image src={product.image} alt={product.name} fluid />\r\n              </Col>\r\n              <Col md={3}>\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item>\r\n                    <h3>{product.name}</h3>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Rating\r\n                      value={product.rating}\r\n                      text={`${product.numReviews} reviews`}\r\n                    />\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    Description: {product.description}\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Col>\r\n              <Col md={3}>\r\n                <Card>\r\n                  <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Price:</Col>\r\n                        <Col>\r\n                          <strong>${product.price}</strong>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Status:</Col>\r\n                        <Col>\r\n                          {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n\r\n                    {product.countInStock > 0 && (\r\n                      <ListGroup.Item>\r\n                        <Row>\r\n                          <Col>Qty</Col>\r\n                          <Col>\r\n                            <Form.Control\r\n                              as='select'\r\n                              value={qty}\r\n                              onChange={(e) => setQty(e.target.value)}\r\n                            >\r\n                              {[...Array(product.countInStock).keys()].map(\r\n                                (x) => (\r\n                                  <option key={x + 1} value={x + 1}>\r\n                                    {x + 1}\r\n                                  </option>\r\n                                )\r\n                              )}\r\n                            </Form.Control>\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                    )}\r\n\r\n                    <ListGroup.Item>\r\n                      <Button\r\n                        onClick={addToCartHandler}\r\n                        className='btn-block'\r\n                        type='button'\r\n                        disabled={product.countInStock === 0}\r\n                      >\r\n                        Add To Cart\r\n                      </Button>\r\n                    </ListGroup.Item>\r\n                  </ListGroup>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col md={6}>\r\n              <h2>Reviews</h2>\r\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n              <ListGroup variant='flush'>\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} />\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                <ListGroup.Item>\r\n                  <h2>Write a Customer Review</h2>\r\n                  {successProductReview && (\r\n                    <Message variant='success'>\r\n                      Review submitted successfully\r\n                    </Message>\r\n                  )}\r\n                  {loadingProductReview && <Loader />}\r\n                  {errorProductReview && (\r\n                    <Message variant='danger'>{errorProductReview}</Message>\r\n                  )}\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId='rating'>\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as='select'\r\n                          value={rating}\r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option value=''>Select...</option>\r\n                          <option value='1'>1 - Poor</option>\r\n                          <option value='2'>2 - Fair</option>\r\n                          <option value='3'>3 - Good</option>\r\n                          <option value='4'>4 - Very Good</option>\r\n                          <option value='5'>5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId='comment'>\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control\r\n                          as='textarea'\r\n                          row='3'\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button\r\n                        disabled={loadingProductReview || comment === '' || rating === 0}\r\n                        type='submit'\r\n                        variant='primary'\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>\r\n                      Please <Link to='/login'>sign in</Link> to write a review{' '}\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n          </>\r\n        )}\r\n      </>\r\n  )\r\n}\r\n\r\nexport default ProductScreen\r\n","export const CART_ADD_ITEM = \"CART_ADD_ITEM\"\r\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\"\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS' \r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD' \r\nexport const CART_CLEAN_ALL = 'CART_CLEAN_ALL'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\nexport const ORDER_DETAILS_RESET = 'ORDER_DETAILS_RESET'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n\r\nexport const ORDERS_LIST_MY_REQUEST = 'ORDERS_LIST_MY_REQUEST'\r\nexport const ORDERS_LIST_MY_SUCCESS = 'ORDERS_LIST_MY_SUCCESS'\r\nexport const ORDERS_LIST_MY_FAIL = 'ORDERS_LIST_MY_FAIL'\r\nexport const ORDERS_LIST_MY_RESET = 'ORDERS_LIST_MY_RESET'\r\n\r\nexport const ORDERS_LIST_REQUEST = 'ORDERS_LIST_REQUEST'\r\nexport const ORDERS_LIST_SUCCESS = 'ORDERS_LIST_SUCCESS'\r\nexport const ORDERS_LIST_FAIL = 'ORDERS_LIST_FAIL'\r\nexport const ORDERS_LIST_RESET = 'ORDERS_LIST_RESET'","import React, { useState, useEffect } from 'react'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from  'react-redux'\r\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap'\r\nimport { ORDER_DETAILS_RESET } from '../constants/orderConstants'\r\n\r\nconst ProfileScreen = ({ history, location }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n   \r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success: successUpdate } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, orders, errorOrders } = orderListMy\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            dispatch({type: ORDER_DETAILS_RESET})\r\n            dispatch(listMyOrders())\r\n            if (!user.name) {\r\n                dispatch(getUserDetails('profile'))    \r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n\r\n    }, [dispatch, userInfo, history, user])\r\n    \r\n\r\n    const submitHandler =  (e) => {\r\n        e.preventDefault()\r\n        if (password === confirmPassword) {\r\n            dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n        }\r\n\r\n\r\n        // DISPATCH THE THING\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n          <Col md={4}>\r\n          <h1>User Profile</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {successUpdate && <Message variant='success'>Profile Updated</Message>}\r\n            {password !== confirmPassword && <Message variant='danger'>Passwords do not match</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type='name' placeholder='Enter your name' value={name} onChange={e => setName(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n               \r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Adress</Form.Label>\r\n                    <Form.Control type='email' placeholder='Enter your email' value={email} onChange={e => setEmail(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter your password' value={password} onChange={e => setPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter your password' value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    UPDATE\r\n                </Button>\r\n            </Form>\r\n          </Col>  \r\n          <Col md={8}>\r\n            <h1>My Orders</h1>\r\n            {loadingOrders ? (\r\n            <Loader />\r\n            ) : errorOrders ? (\r\n            <Message variant='danger'>{errorOrders}</Message>\r\n            ) : (\r\n            <Table striped bordered hover responsive className='table-sm'>\r\n                <thead>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <th>DATE</th>\r\n                    <th>TOTAL</th>\r\n                    <th>PAID</th>\r\n                    <th>DELIVERED</th>\r\n                    <th></th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {orders.map((order) => (\r\n                    <tr key={order._id}>\r\n                    <td>{order._id}</td>\r\n                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                    <td>{order.totalPrice}</td>\r\n                    <td>\r\n                        {order.isPaid ? (\r\n                        order.paidAt.substring(0, 10)\r\n                        ) : (\r\n                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                        )}\r\n                    </td>\r\n                    <td>\r\n                        {order.isDelivered ? (\r\n                        order.deliveredAt.substring(0, 10)\r\n                        ) : (\r\n                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                        )}\r\n                    </td>\r\n                    <td>\r\n                        <LinkContainer to={`/order/${order._id}`}>\r\n                        <Button className='btn-sm' variant='light'>\r\n                            Details\r\n                        </Button>\r\n                        </LinkContainer>\r\n                    </td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </Table>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import axios from 'axios'\r\nimport { CART_CLEAN_ALL } from '../constants/cartConstants';\r\nimport { ORDERS_LIST_FAIL, ORDERS_LIST_MY_FAIL, ORDERS_LIST_MY_REQUEST, ORDERS_LIST_MY_SUCCESS, ORDERS_LIST_REQUEST, ORDERS_LIST_SUCCESS, ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DELIVER_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS } from \"../constants/orderConstants\";\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/orders`, order,  config)\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n        dispatch({\r\n            type: CART_CLEAN_ALL\r\n        })\r\n\r\n        localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message \r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message \r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderID, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.put(`/api/orders/${orderID}/pay`, paymentResult,  config)\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message \r\n        })\r\n    }\r\n}\r\n\r\nexport const orderDeliver = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.put(`/api/orders/${order._id}/deliver`, {},  config)\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message \r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: ORDERS_LIST_MY_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n        dispatch({\r\n            type: ORDERS_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDERS_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message \r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: ORDERS_LIST_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/`, config)\r\n\r\n        dispatch({\r\n            type: ORDERS_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDERS_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message \r\n        })\r\n    }\r\n}","import axios from 'axios'\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS } from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    \r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n    \r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n        \r\n    })\r\n    \r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: {\r\n            product: id\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAdress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\nimport Message from '../components/Message'\r\nimport { Row, Col, Form, Button, Card, ListGroup, Image } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CartScreen = ({ match, location, history}) => {\r\n    const productID = match.params.id\r\n\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {cartItems} = cart\r\n\r\n    const dispatch = useDispatch()\r\n    console.log(productID, qty);\r\n\r\n    useEffect(() => {\r\n        if(productID) {\r\n            dispatch(addToCart(productID, qty))\r\n            history.push('/cart')\r\n        }\r\n    }, [dispatch, productID, qty, history]) \r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                <Message>\r\n                    Your cart is empty <Link to='/'>Go Back</Link>\r\n                </Message> ) : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n                                    <Col>${item.price}</Col>\r\n                                    <Col>\r\n                                        <Form.Control\r\n                                            as='select'\r\n                                            value={item.qty}\r\n                                            onChange={(e) =>\r\n                                                dispatch(\r\n                                                addToCart(item.product, Number(e.target.value))\r\n                                                )\r\n                                            }\r\n                                            >\r\n                                            {[...Array(item.countInStock).keys()].map((x) => (\r\n                                                <option key={x + 1} value={x + 1}>\r\n                                                {x + 1}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col>\r\n                                    <Button\r\n                                        type='button'\r\n                                        variant='light'\r\n                                        onClick={() => removeFromCartHandler(item.product)}\r\n                                        >\r\n                                        <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n\r\n                )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>\r\n                                SubTotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items\r\n                            </h2>\r\n                            <h4>${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}</h4>\r\n                            \r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button\r\n                                type='button'\r\n                                className='btn-block'\r\n                                disabled={cartItems.length === 0}\r\n                                onClick={checkoutHandler}\r\n                            >\r\n                                Proceed To Checkout\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { login } from '../actions/userActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { useDispatch, useSelector } from  'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { Row, Col, Form, Button } from 'react-bootstrap'\r\n\r\nconst LoginScreen = ({ history, location }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n   \r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n\r\n    const { loading, error, userInfo } = userLogin\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n\r\n    }, [userInfo, history, redirect])\r\n    \r\n    \r\n\r\n    const submitHandler =  (e) => {\r\n        e.preventDefault()\r\n\r\n        dispatch(login(email, password))\r\n        \r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Adress</Form.Label>\r\n                    <Form.Control type='email' placeholder='Enter your email' value={email} onChange={e => setEmail(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter your password' value={password} onChange={e => setPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer?{' '}\r\n                    <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { register} from '../actions/userActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { useDispatch, useSelector } from  'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { Row, Col, Form, Button } from 'react-bootstrap'\r\n\r\nconst RegisterScreen = ({ history, location }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n   \r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n\r\n    const { loading, error, userInfo } = userRegister\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n\r\n    }, [userInfo, history, redirect])\r\n    \r\n    \r\n\r\n    const submitHandler =  (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password === confirmPassword) {\r\n            dispatch(register(name, email, password))\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {password !== confirmPassword && <Message variant='danger'>Passwords do not match</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type='name' placeholder='Enter your name' value={name} onChange={e => setName(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n               \r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Adress</Form.Label>\r\n                    <Form.Control type='email' placeholder='Enter your email' value={email} onChange={e => setEmail(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter your password' value={password} onChange={e => setPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter your password' value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Sign Up\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an account?{' '}\r\n                    <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Login\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({step1, step2, step3, step4}) => {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            \r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Login</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link disabled>Login</Nav.Link>\r\n                    </LinkContainer>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link disabled>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <LinkContainer to='/Payment'>\r\n                        <Nav.Link disabled>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link disabled>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                )}\r\n            </Nav.Item>\r\n            \r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from  'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { saveShippingAdress } from '../actions/cartActions'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\n\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n\r\n    const shippingAddress = useSelector(state => state.cart.shippingAddress)\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAdress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n    return (\r\n        <FormContainer>\r\n        \r\n            <CheckoutSteps step1 step2/>\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control type='address' placeholder='Enter your address' value={address} onChange={e => setAddress(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control type='city' placeholder='Enter your city' value={city} onChange={e => setCity(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control type='postalCode' placeholder='Enter your Postal Code' value={postalCode} onChange={e => setPostalCode(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control type='country' placeholder='Enter your country' value={country} onChange={e => setCountry(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from  'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\n\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n\r\n    const shippingAddress = useSelector(state => state.cart.shippingAddress)\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n    \r\n    if (!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod( paymentMethod ))\r\n        history.push('/placeorder')\r\n    }\r\n    return (\r\n        <FormContainer>\r\n        \r\n            <CheckoutSteps step1 step2 step3/>\r\n            <h1>Payment Method</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Col>\r\n                        <Form.Label as='label'>Select Method</Form.Label>\r\n                        <Form.Check type='radio' label='PayPal or Credit Card' id='PayPal' name='paymentMethod' checked value='PayPal' onChange={e => setPaymentMethod(e.target.value)}> \r\n                        </Form.Check>\r\n                    </Col>\r\n                    \r\n                    \r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from  'react-redux'\r\nimport Message from '../components/Message'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Col, Row, ListGroup, Image, Card} from 'react-bootstrap'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    const { order, error, success: successCreate } = useSelector(state => state.orderCreate)\r\n\r\n    if (!cart.shippingAddress.address) {\r\n        history.push('/shipping')\r\n    } else if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n\r\n\r\n    cart.itemsPrice = cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    cart.shippingPrice = cart.itemsPrice > 100 ? 0 : 100\r\n    cart.taxPrice = Number((0.15 * cart.itemsPrice).toFixed(2))\r\n    cart.totalPrice = Number((\r\n        Number(cart.itemsPrice) +\r\n        Number(cart.shippingPrice) +\r\n        Number(cart.taxPrice)\r\n      ).toFixed(2))\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice\r\n        }))\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(successCreate) {\r\n            history.push(`/order/${order._id}`)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, successCreate, order])\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4/>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h1>Shipping</h1>\r\n                            <p>\r\n                                <strong>Address:</strong> {cart.shippingAddress.address}, {cart.shippingAddress.city} {cart.shippingAddress.postalCode}, {cart.shippingAddress.country} \r\n                            </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h1>Payment Method</h1>\r\n                            <strong> Method: </strong> {cart.paymentMethod}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h1>Order Items</h1>\r\n                            {cartItems.length === 0 ? <Message>Your cart is empty</Message> : (\r\n                                <ListGroup>\r\n                                    {cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n                                                <Col md={4}>    \r\n                                                    <strong>{item.qty} X ${item.price} = ${item.qty * item.price} </strong>                                               \r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h1>Order Summary</h1>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items: </Col>\r\n                                    <Col>${cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                            <Button\r\n                                type='button'\r\n                                className='btn-block'\r\n                                disabled={cartItems.length === 0}\r\n                                onClick={placeOrderHandler}\r\n                            >\r\n                                Place Order\r\n                            </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from  'react-redux'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from \"react-paypal-button-v2\"\r\nimport Message from '../components/Message'\r\nimport { Link } from 'react-router-dom'\r\nimport { Col, Row, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, orderDeliver, payOrder } from '../actions/orderActions'\r\nimport {ORDER_PAY_RESET, ORDER_DELIVER_RESET} from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n    const orderID = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n\r\n    const { order, error, loading: loadingDetails } = useSelector(state => state.orderDetails)\r\n    const { userInfo } = useSelector(state => state.userLogin)\r\n    const { loading: loadingPay, success: successPay } = useSelector(state => state.orderPay)\r\n    const { loading: loadingDeliver, success: successDeliver } = useSelector(state => state.orderDeliver)\r\n\r\n    useEffect(() => {        \r\n        const addPayPalScript = async () => {\r\n            const { data: clientId } = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.async = true\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}&currency=BRL`\r\n\r\n            script.onload = () => setSdkReady(true)\r\n            document.body.appendChild(script)\r\n        }\r\n        \r\n        !userInfo && history.push('/login') \r\n        if (order && userInfo) {\r\n            if (order.user._id !== userInfo._id && !userInfo.isAdmin) history.push('/')\r\n        } \r\n\r\n\r\n        if(!order || successPay || successDeliver) {\r\n            dispatch({type: ORDER_DELIVER_RESET})\r\n            dispatch({type: ORDER_PAY_RESET})\r\n            dispatch(getOrderDetails(orderID))\r\n\r\n        } else if(!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n\r\n        \r\n\r\n    }, [dispatch, orderID, order, successPay, history, userInfo, successDeliver])\r\n\r\n    const onSuccessHandler = (paymentResult) => {\r\n        console.log(paymentResult)\r\n        dispatch(payOrder(orderID, paymentResult))\r\n    }\r\n\r\n    const onDeliverHandler = () => {\r\n        dispatch(orderDeliver(order))\r\n    }\r\n\r\n\r\n    return loadingDetails ? <Loader/> : error ? <Message variant='danger'>{ error }</Message> : \r\n    (\r\n        <>\r\n            <h1>Order {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <div className='my-3'>\r\n                                <strong>Name:</strong> {order.user.name}\r\n                            </div>\r\n                            <div className='my-3'>\r\n                                <strong>Email:</strong>\r\n                                <a href={`mailto:${order.user.email}`}> {order.user.email}</a>\r\n                            </div>\r\n                            <div className='my-3'>\r\n                                <strong>Address:</strong> {order.shippingAddress.address}, {order.shippingAddress.city} {order.shippingAddress.postalCode}, {order.shippingAddress.country} \r\n                            </div>\r\n                            <div className='my-3'>\r\n                                {order.isDelivered ? <Message variant='success'>Delivered at {order.deliveredAt}</Message>: <Message variant='danger'>Not Delivered</Message>}\r\n                            </div>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <div className='my-3'>\r\n                                <strong> Method: </strong> {order.paymentMethod}\r\n                            </div>\r\n                            <div className='my-3'>\r\n                                {order.isPaid ? <Message variant='success'>Paid on {order.paidAt}</Message>: <Message variant='danger'>Not Paid</Message>}\r\n                            </div>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ? <Message>Your cart is empty</Message> : (\r\n                                <ListGroup>\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n                                                <Col md={4}>    \r\n                                                    <strong>{item.qty} X ${item.price} = ${item.qty * item.price} </strong>                                               \r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items: </Col>\r\n                                    <Col>${order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader/>}\r\n                                    {!sdkReady ? (\r\n                                        <Loader/> \r\n                                    ) : (\r\n                                        <PayPalButton amount={order.totalPrice} currency='BRL' onSuccess={onSuccessHandler}/>\r\n                                        \r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n                            {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                <ListGroup.Item>\r\n                                    <Button  type='button' className='btn btn-block' onClick={onDeliverHandler}>\r\n                                        Mark as Delivered\r\n                                    </Button>\r\n                                    {loadingDeliver && <Loader/>}\r\n                                </ListGroup.Item>\r\n                            )}\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useEffect } from 'react'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from  'react-redux'\r\nimport { Button, Table } from 'react-bootstrap'\r\nimport { deleteUser, getUserList } from '../actions/userActions'\r\n\r\nconst UserListScreen = ({ history, match }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList \r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(getUserList())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, successDelete, userInfo])\r\n    \r\n    const deleteHandler = (id) => {\r\n        if (window.confirm(\"Are you Sure?\")) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Users</h1>   \r\n            {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.map(user => (\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                                <td>{user.isAdmin ? (<i className='fas fa-check' style={{color: 'green'}}/> ) : (<i className='fas fa-times' style={{color: 'red'}}/>)}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            <i className='fas fa-edit'/>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                        <i className=\"fas fa-trash-alt fa-2x\"></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useEffect } from 'react'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from  'react-redux'\r\nimport { Button, Table, Row, Col } from 'react-bootstrap'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\nimport Paginate from '../components/Paginate'\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n    \r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { success: successDeleteProduct, error: deleteError } = productDelete\r\n    \r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { success: successCreate, product: createdProduct } = productCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n\r\n        if (successCreate) dispatch({ type: PRODUCT_CREATE_RESET })\r\n        \r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        } \r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts('', pageNumber))\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDeleteProduct, successCreate, createdProduct, pageNumber])\r\n    \r\n    const deleteHandler = (id) => {\r\n        if (window.confirm(\"Are you Sure?\")) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>   \r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {deleteError && <Message variant='danger'>Error during deletion, {deleteError}</Message>}\r\n            {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <>\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>PRICE</th>\r\n                                <th>CATEGORY</th>\r\n                                <th>BRAND</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {products.map(product => (\r\n                                <tr key={product._id}>\r\n                                    <td>{product._id}</td>\r\n                                    <td>{product.name}</td>\r\n                                    <td>${product.price}</td>\r\n                                    <td>{product.category}</td>\r\n                                    <td>{product.brand}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                            <Button variant='light' className='btn-sm'>\r\n                                                <i className='fas fa-edit'/>\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n                                        <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                            <i className=\"fas fa-trash-alt fa-2x\"></i>\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                    <Paginate pages={pages} page={page} keyword={''} isAdmin={true}></Paginate>\r\n                </>    \r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { listProductDetails, updateProduct  } from '../actions/productActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { useDispatch, useSelector } from  'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport {  Form, Button } from 'react-bootstrap'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\n\r\nconst ProductEditScreen = ({ history, match }) => {\r\n    \r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [uploading, setUploading] =useState(false)\r\n   \r\n    const dispatch = useDispatch()\r\n    const productID = match.params.id\r\n\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading: loadingProduct, errorProduct, product } = productDetails\r\n    \r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { success: successUpdate } = productUpdate\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id !== productID ) {\r\n                dispatch(listProductDetails(productID))\r\n            } else {\r\n                setName(product.name)\r\n                setBrand(product.brand)\r\n                setDescription(product.description)\r\n                setPrice(product.price)\r\n                setCountInStock(product.countInStock)\r\n                setCategory(product.category)\r\n                setImage(product.image)\r\n            }    \r\n        }\r\n        \r\n    }, [dispatch, product, productID, history, successUpdate])\r\n    \r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n    \r\n        try {\r\n          const config = {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data',\r\n            },\r\n          }\r\n    \r\n          const { data } = await axios.post('/api/upload', formData, config)\r\n    \r\n          console.log(data);\r\n          setImage(data)\r\n          setUploading(false)\r\n        } catch (error) {\r\n          console.error(error)\r\n          setUploading(false)\r\n        }\r\n    }\r\n\r\n    const submitHandler =  (e) => {\r\n        e.preventDefault()\r\n        const updatedProduct = { name, price, brand, countInStock, image, description, category, _id: productID }\r\n        dispatch(updateProduct(updatedProduct))\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <Link to='/admin/productlist' className='btn btn-dark my-3'>\r\n                Go Back\r\n            </Link>\r\n            {loadingProduct ? <Loader/> : errorProduct ? <Message variant='danger'>{errorProduct}</Message> : (\r\n                <FormContainer>\r\n                    <h1>Edit Product</h1>\r\n                    \r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control type='name' placeholder='Enter the product name' value={name} onChange={e => setName(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    \r\n                        <Form.Group controlId='price'>\r\n                            <Form.Label>Price</Form.Label>\r\n                            <Form.Control type='number' placeholder='Enter the product price' value={price} onChange={e => setPrice(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='image'>\r\n                            <Form.Label>Image</Form.Label>\r\n                            <Form.Control type='text' placeholder='Enter the product image address' value={image} onChange={e => setImage(e.target.value)}></Form.Control>\r\n                            <Form.File id='image-file' label='Choose File' custom onChange={uploadFileHandler}>\r\n                            </Form.File>\r\n                            {uploading && <Loader/>}\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='brand'>\r\n                            <Form.Label>Brand</Form.Label>\r\n                            <Form.Control type='text' placeholder='Enter the product brand' value={brand} onChange={e => setBrand(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='countinstock'>\r\n                            <Form.Label>Count in Stock</Form.Label>\r\n                            <Form.Control type='number' placeholder='Enter the product Stock' value={countInStock} onChange={e => setCountInStock(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='category'>\r\n                            <Form.Label>Category</Form.Label>\r\n                            <Form.Control type='text' placeholder='Enter the product category' value={category} onChange={e => setCategory(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='description'>\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control type='text' placeholder='Enter the product description' value={description} onChange={e => setDescription(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Button type='submit' variant='primary'>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                </FormContainer>\r\n            )}\r\n            \r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { getUserDetails, updateUser} from '../actions/userActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { useDispatch, useSelector } from  'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport {  Form, Button } from 'react-bootstrap'\r\nimport { USER_DETAILS_RESET, USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ history, match }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState('')\r\n\r\n   \r\n    const dispatch = useDispatch()\r\n    const userID = match.params.id\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { success: successUpdate } = userUpdate\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            alert('User succesfully updated')\r\n            history.push('/admin/userlist')\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            dispatch({ type: USER_DETAILS_RESET })\r\n        } else {\r\n            if (!user.name || user._id !== userID ) {\r\n                dispatch(getUserDetails(userID))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n        \r\n    }, [userID, user, successUpdate, history, dispatch])\r\n    \r\n    const submitHandler =  (e) => {\r\n        e.preventDefault()\r\n        if (window.confirm(\"Are you sure?\")) {\r\n            dispatch(updateUser({id: userID, name, email, isAdmin}))   \r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <Link to='/admin/userlist' className='btn btn-dark my-3'>\r\n                Go Back\r\n            </Link>\r\n            {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <FormContainer>\r\n                    <h1>Edit User</h1>\r\n                    \r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control type='name' placeholder='Enter your name' value={name} onChange={e => setName(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    \r\n                        <Form.Group controlId='email'>\r\n                            <Form.Label>Email Adress</Form.Label>\r\n                            <Form.Control type='email' placeholder='Enter your email' value={email} onChange={e => setEmail(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='isadmin'>\r\n                            <Form.Label>Is Admin</Form.Label>\r\n                            <Form.Check type='checkbox' label='is Admin' checked={isAdmin} onChange={e => setIsAdmin(e.target.checked)}></Form.Check>\r\n                        </Form.Group>\r\n\r\n                        <Button type='submit' variant='primary'>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                </FormContainer>\r\n            )}\r\n            \r\n        </>\r\n        \r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from  'react-redux'\r\nimport { Button, Table } from 'react-bootstrap'\r\nimport { listOrders } from '../actions/orderActions'\r\nimport { ORDER_DETAILS_RESET } from '../constants/orderConstants'\r\n\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        dispatch({type: ORDER_DETAILS_RESET})\r\n        if (userInfo) {\r\n            if (!userInfo.isAdmin) {\r\n                \r\n            } else {\r\n                dispatch(listOrders())\r\n            }\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n        \r\n    }, [dispatch, history, userInfo])\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h1>Orders</h1>\r\n            {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>USER</th>\r\n                            <th>DATE</th>\r\n                            <th>TOTAL</th>\r\n                            <th>PAID</th>\r\n                            <th>DELIVERED</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user.name}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>${order.totalPrice}</td>\r\n                                <td>{order.isPaid ? (order.paidAt.substring(0, 10)) : (<i className='fas fa-times' style={{color: 'red'}}/>)}</td>\r\n                                <td>{order.isDelivered ? (order.deliveredAt.substring(0, 10)) : (<i className='fas fa-times' style={{color: 'red'}}/>)}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            DETAILS\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import React from 'react'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport { Container } from 'react-bootstrap'\r\nimport HomeScreen from './Screens/HomeScreen'\r\nimport {BrowserRouter as Router, Route } from 'react-router-dom' \r\nimport ProductScreen from './Screens/ProductScreen'\r\nimport ProfileScreen from './Screens/ProfileScreen'\r\nimport CartScreen from './Screens/CartScreen'\r\nimport LoginScreen from './Screens/LoginScreen'\r\nimport RegisterScreen from './Screens/RegisterScreen'\r\nimport ShippingScreen from './Screens/ShippingScreen'\r\nimport PaymentScreen from './Screens/PaymentScreen'\r\nimport PlaceOrderScreen from './Screens/PlaceOrderScreen'\r\nimport OrderScreen from './Screens/OrderScreen'\r\nimport UserListScreen from './Screens/UserListScreen'\r\nimport ProductListScreen from './Screens/ProductListScreen'\r\nimport ProductEditScreen from './Screens/ProductEditScreen'\r\nimport UserEditScreen from './Screens/UserEditScreen'\r\nimport OrderListScreen from './Screens/OrderListScreen'\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Header/>\r\n      <main className='py-3'>\r\n        <Container>\r\n          <Route path='/shipping' component={ShippingScreen} exact />\r\n          <Route path='/placeorder' component={PlaceOrderScreen} exact />\r\n          <Route path='/order/:id?' component={OrderScreen} />\r\n          <Route path='/payment' component={PaymentScreen} exact />\r\n          <Route path='/admin/userlist' component={UserListScreen} exact />\r\n          <Route path='/admin/orderlist' component={OrderListScreen} exact />\r\n          <Route path='/admin/productlist' component={ProductListScreen} exact />\r\n          <Route path='/admin/productlist/page/:pageNumber' component={ProductListScreen} exact />\r\n          <Route path='/admin/product/:id?/edit' component={ProductEditScreen} exact />\r\n          <Route path='/admin/user/:id?/edit' component={UserEditScreen} />\r\n          <Route exact path='/search/:keyword' component={HomeScreen} />\r\n          <Route exact path='/page/:pageNumber' component={HomeScreen} />\r\n          <Route exact path='/search/:keyword/page/:pageNumber' component={HomeScreen} />\r\n          <Route path='/' component={HomeScreen} exact/>\r\n          <Route path='/profile' component={ProfileScreen} exact />\r\n          <Route path='/product/:id?' component={ProductScreen}/>\r\n          <Route path='/cart/:id?' component={CartScreen}/>\r\n          <Route exact path='/login' component={LoginScreen}/>\r\n          <Route exact path='/register' component={RegisterScreen}/>\r\n        </Container>\r\n      </main>\r\n      <Footer/> \r\n      \r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { userDetailsReducer, userListReducer, userLoginReducer, userRegisterReducer, userUpdateProfileReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers'\r\nimport { orderListMyReducer, orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListReducer, orderDeliverReducer } from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productCreateReview: productReviewCreateReducer, \r\n    productTopRated: productTopRatedReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer\r\n})\r\n\r\nconst itemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst paymentMethodFromStorage = localStorage.getItem('paymentMethod') ? JSON.parse(localStorage.getItem('paymentMethod')) : {}\r\n\r\n\r\n\r\nconst initialState = {\r\n   cart: {\r\n       cartItems : itemsFromStorage,\r\n       shippingAddress: shippingAddressFromStorage,\r\n       paymentMethod: paymentMethodFromStorage\r\n   },\r\n   userLogin: {\r\n    userInfo: userInfoFromStorage\r\n   }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer, \r\n    initialState, \r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\n\r\nexport default store","import { PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_CREATE_RESET, PRODUCT_CREATE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_UPDATE_RESET, PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_REQUEST, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_CREATE_REVIEW_RESET, PRODUCT_TOP_FAIL, PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, } from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = {products: []}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return {loading: true, products: [] }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {loading: false, products: action.payload.products, pages: action.payload\r\n            .pages, page: action.payload.page}\r\n        case PRODUCT_LIST_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = {product: {reviews: []}}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return {...state, loading: true }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return {loading: false, product: action.payload}\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return {loading: true, success: false }\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return {loading: false, success: true}\r\n        case PRODUCT_DELETE_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return {loading: true, success: false }\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return {loading: false, success: true, product: action.payload}\r\n        case PRODUCT_CREATE_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productUpdateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return {loading: true }\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return {loading: false, success: true}\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        case PRODUCT_UPDATE_RESET:\r\n            return {}     \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return {loading: true }\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return {loading: false, success: true}\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}     \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_TOP_REQUEST:\r\n        return { loading: true, products: [] }\r\n      case PRODUCT_TOP_SUCCESS:\r\n        return { loading: false, products: action.payload }\r\n      case PRODUCT_TOP_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }","import { CART_ADD_ITEM, CART_CLEAN_ALL, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS } from \"../constants/cartConstants\"\r\n\r\n\r\nexport const cartReducer = (state = {cartItems: [], shippingAddress: {}}, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n             \r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product ) \r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }   \r\n        case CART_REMOVE_ITEM:\r\n\r\n            const cartItems = state.cartItems.filter(x => x.product !== action.payload.product)\r\n\r\n            return {\r\n                ...state,\r\n                cartItems \r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            \r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n    \r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n\r\n        case CART_CLEAN_ALL:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}","import { USER_DELETE_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_RESET, USER_DETAILS_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_RESET, USER_LIST_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_REQUEST, USER_UPDATE_RESET, USER_UPDATE_SUCCESS } from \"../constants/userConstants\"\r\n\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return {loading: true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return {loading: false, userInfo: action.payload}\r\n        case USER_LOGIN_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return {loading: true }\r\n        case USER_REGISTER_SUCCESS:\r\n            return {loading: false, userInfo: action.payload}\r\n        case USER_REGISTER_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        case USER_REGISTER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_DETAILS_SUCCESS:\r\n            return {loading: false, user: action.payload}\r\n        case USER_DETAILS_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return {loading: true }\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return {loading: false, success: true, userInfo: action.payload}\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_LIST_SUCCESS:\r\n            return {loading: false, users: action.payload}\r\n        case USER_LIST_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case USER_DELETE_SUCCESS:\r\n            return {loading: false, success: true}\r\n        case USER_DELETE_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return {loading: true }\r\n        case USER_UPDATE_SUCCESS:\r\n            return {loading: false, success: true}\r\n        case USER_UPDATE_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        case USER_UPDATE_RESET:\r\n            return {}     \r\n        default:\r\n            return state\r\n    }\r\n}","import { ORDERS_LIST_FAIL, ORDERS_LIST_MY_FAIL, ORDERS_LIST_MY_REQUEST, ORDERS_LIST_MY_SUCCESS, ORDERS_LIST_REQUEST, ORDERS_LIST_SUCCESS, ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DELIVER_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_RESET, ORDER_DELIVER_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_RESET, ORDER_DETAILS_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_RESET, ORDER_PAY_SUCCESS } from \"../constants/orderConstants\";\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {}}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_DETAILS_RESET:\r\n            return {loading: true, orderItems: [], shippingAddress: {}}        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state = {orders: []}, action) => {\r\n    switch (action.type) {\r\n        case ORDERS_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDERS_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n        case ORDERS_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (state = {orders: []}, action) => {\r\n    switch (action.type) {\r\n        case ORDERS_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDERS_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n        case ORDERS_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './bootstrap.min.css'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}