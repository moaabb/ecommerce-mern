[{"C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\index.js":"1","C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\App.js":"3","C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\components\\Header.js":"4","C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\components\\Footer.js":"5","C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\Screens\\HomeScreen.js":"6","C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\components\\Product.js":"7","C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\components\\Rating.js":"8","C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\Screens\\ProductScreen.js":"9","C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\products.js":"10","C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\store.js":"11","C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\constants\\productConstants.js":"12","C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\actions\\productActions.js":"13","C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\reducers\\productReducers.js":"14","C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\components\\Loader.js":"15","C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\components\\Message.js":"16","C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\Screens\\CartScreen.js":"17","C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\reducers\\cartReducers.js":"18","C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\constants\\cartConstants.js":"19","C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\actions\\cartActions.js":"20","C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\Screens\\LoginScreen.js":"21","C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\reducers\\userReducers.js":"22","C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\constants\\userConstants.js":"23","C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\components\\FormContainer.js":"24","C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\actions\\userActions.js":"25","C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\Screens\\RegisterScreen.js":"26","C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\Screens\\ProfileScreen.js":"27","C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\Screens\\ShippingScreen.js":"28","C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\components\\CheckoutSteps.js":"29","C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\Screens\\PaymentScreen.js":"30","C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\Screens\\PlaceOrderScreen.js":"31","C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\reducers\\orderReducers.js":"32","C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\actions\\orderActions.js":"33","C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\constants\\orderConstants.js":"34","C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\Screens\\OrderScreen.js":"35","C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\Screens\\UserListScreen.js":"36"},{"size":594,"mtime":1608643523632,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":499162500000,"results":"39","hashOfConfig":"38"},{"size":1719,"mtime":1620564597729,"results":"40","hashOfConfig":"38"},{"size":2942,"mtime":1620564872164,"results":"41","hashOfConfig":"38"},{"size":424,"mtime":1608499875931,"results":"42","hashOfConfig":"38"},{"size":1371,"mtime":1608670769179,"results":"43","hashOfConfig":"38"},{"size":894,"mtime":1608552845619,"results":"44","hashOfConfig":"38"},{"size":1804,"mtime":1608552408853,"results":"45","hashOfConfig":"38"},{"size":4652,"mtime":1608725063274,"results":"46","hashOfConfig":"38"},{"size":2486,"mtime":1608556152672,"results":"47","hashOfConfig":"38"},{"size":1989,"mtime":1620559211654,"results":"48","hashOfConfig":"38"},{"size":370,"mtime":1608671273953,"results":"49","hashOfConfig":"38"},{"size":1273,"mtime":1608671343351,"results":"50","hashOfConfig":"38"},{"size":1065,"mtime":1608726296591,"results":"51","hashOfConfig":"38"},{"size":458,"mtime":1608670932986,"results":"52","hashOfConfig":"38"},{"size":248,"mtime":1608670545254,"results":"53","hashOfConfig":"38"},{"size":4790,"mtime":1609164419878,"results":"54","hashOfConfig":"38"},{"size":1559,"mtime":1620479613210,"results":"55","hashOfConfig":"38"},{"size":286,"mtime":1620479549035,"results":"56","hashOfConfig":"38"},{"size":1392,"mtime":1611150489553,"results":"57","hashOfConfig":"38"},{"size":2385,"mtime":1609159513937,"results":"58","hashOfConfig":"38"},{"size":2626,"mtime":1620559057432,"results":"59","hashOfConfig":"38"},{"size":1066,"mtime":1620558957808,"results":"60","hashOfConfig":"38"},{"size":399,"mtime":1609066529888,"results":"61","hashOfConfig":"38"},{"size":4762,"mtime":1620559166049,"results":"62","hashOfConfig":"38"},{"size":3297,"mtime":1609163894044,"results":"63","hashOfConfig":"38"},{"size":5800,"mtime":1620480489869,"results":"64","hashOfConfig":"38"},{"size":2497,"mtime":1609790291806,"results":"65","hashOfConfig":"38"},{"size":2014,"mtime":1609790166122,"results":"66","hashOfConfig":"38"},{"size":1662,"mtime":1611150595969,"results":"67","hashOfConfig":"38"},{"size":6367,"mtime":1620479384413,"results":"68","hashOfConfig":"38"},{"size":2761,"mtime":1620480632058,"results":"69","hashOfConfig":"38"},{"size":3744,"mtime":1620479713834,"results":"70","hashOfConfig":"38"},{"size":868,"mtime":1620480348053,"results":"71","hashOfConfig":"38"},{"size":7480,"mtime":1620479983711,"results":"72","hashOfConfig":"38"},{"size":2598,"mtime":1620565116308,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"kkabz8",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\index.js",[],["150","151"],"C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\App.js",[],"C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\components\\Header.js",[],"C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\Screens\\HomeScreen.js",[],"C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\components\\Product.js",[],"C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\Screens\\ProductScreen.js",[],"C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\products.js",[],["152","153"],"C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\store.js",[],"C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\components\\Message.js",[],"C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\Screens\\CartScreen.js",[],"C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\Screens\\LoginScreen.js",[],"C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\Screens\\RegisterScreen.js",[],"C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\Screens\\ProfileScreen.js",["154"],"import React, { useState, useEffect } from 'react'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from  'react-redux'\r\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap'\r\nimport { ORDER_DETAILS_REQUEST, ORDER_DETAILS_RESET } from '../constants/orderConstants'\r\n\r\nconst LoginScreen = ({ history, location }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n   \r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success: successUpdate } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, orders, errorOrders } = orderListMy\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            dispatch({type: ORDER_DETAILS_RESET})\r\n            dispatch(listMyOrders())\r\n            if (!user.name) {\r\n                dispatch(getUserDetails('profile'))    \r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n\r\n    }, [dispatch, userInfo, history, user])\r\n    \r\n\r\n    const submitHandler =  (e) => {\r\n        e.preventDefault()\r\n        if (password === confirmPassword) {\r\n            dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n        }\r\n\r\n\r\n        // DISPATCH THE THING\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n          <Col md={4}>\r\n          <h1>User Profile</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {successUpdate && <Message variant='success'>Profile Updated</Message>}\r\n            {password !== confirmPassword && <Message variant='danger'>Passwords do not match</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type='name' placeholder='Enter your name' value={name} onChange={e => setName(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n               \r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Adress</Form.Label>\r\n                    <Form.Control type='email' placeholder='Enter your email' value={email} onChange={e => setEmail(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter your password' value={password} onChange={e => setPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter your password' value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    UPDATE\r\n                </Button>\r\n            </Form>\r\n          </Col>  \r\n          <Col md={8}>\r\n            <h1>My Orders</h1>\r\n            {loadingOrders ? (\r\n            <Loader />\r\n            ) : errorOrders ? (\r\n            <Message variant='danger'>{errorOrders}</Message>\r\n            ) : (\r\n            <Table striped bordered hover responsive className='table-sm'>\r\n                <thead>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <th>DATE</th>\r\n                    <th>TOTAL</th>\r\n                    <th>PAID</th>\r\n                    <th>DELIVERED</th>\r\n                    <th></th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {orders.map((order) => (\r\n                    <tr key={order._id}>\r\n                    <td>{order._id}</td>\r\n                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                    <td>{order.totalPrice}</td>\r\n                    <td>\r\n                        {order.isPaid ? (\r\n                        order.paidAt.substring(0, 10)\r\n                        ) : (\r\n                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                        )}\r\n                    </td>\r\n                    <td>\r\n                        {order.isDelivered ? (\r\n                        order.deliveredAt.substring(0, 10)\r\n                        ) : (\r\n                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                        )}\r\n                    </td>\r\n                    <td>\r\n                        <LinkContainer to={`/order/${order._id}`}>\r\n                        <Button className='btn-sm' variant='light'>\r\n                            Details\r\n                        </Button>\r\n                        </LinkContainer>\r\n                    </td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </Table>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\Screens\\ShippingScreen.js",[],"C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\Screens\\PaymentScreen.js",[],"C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\Screens\\PlaceOrderScreen.js",[],"C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\Screens\\OrderScreen.js",["155","156"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from  'react-redux'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from \"react-paypal-button-v2\"\r\nimport Message from '../components/Message'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Col, Row, ListGroup, Image, Card, ListGroupItem } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder } from '../actions/orderActions'\r\nimport {ORDER_PAY_RESET} from '../constants/orderConstants'\r\n\r\n\r\n\r\nconst OrderScreen = ({ match }) => {\r\n    const orderID = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const { order, error, loading } = useSelector(state => state.orderDetails)\r\n    \r\n    const { loading: loadingPay, success: successPay } = useSelector(state => state.orderPay)\r\n\r\n    useEffect(() => {\r\n        const addPayPalScript = async () => {\r\n            const { data: clientId } = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.async = true\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}&currency=BRL`\r\n\r\n            script.onload = () => setSdkReady(true)\r\n            document.body.appendChild(script)\r\n        }\r\n\r\n        if(!order || successPay) {\r\n            dispatch({type: ORDER_PAY_RESET})\r\n            dispatch(getOrderDetails(orderID))\r\n        } else if(!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, orderID, order, successPay])\r\n\r\n    const onSuccessHandler = (paymentResult) => {\r\n        console.log(paymentResult)\r\n        dispatch(payOrder(orderID, paymentResult))\r\n    }\r\n\r\n\r\n    return loading ? <Loader/> : error ? <Message variant='danger'>{ error }</Message> : \r\n    (\r\n        <>\r\n            <h1>Order {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Name:</strong> {order.user.name}\r\n                            </p>\r\n                            <p>\r\n                                <strong>Email:</strong>\r\n                                <a href={`mailto:${order.user.email}`}> {order.user.email}</a>\r\n                            </p>\r\n                            <p>\r\n                                <strong>Address:</strong> {order.shippingAddress.address}, {order.shippingAddress.city} {order.shippingAddress.postalCode}, {order.shippingAddress.country} \r\n                            </p>\r\n                            <p>\r\n                                {order.isDelivered ? <Message variant='success'>Delivered at {order.deliveredAt}</Message>: <Message variant='danger'>Not Delivered</Message>}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong> Method: </strong> {order.paymentMethod}\r\n                            </p>\r\n                            <p>\r\n                                {order.isPaid ? <Message variant='success'>Paid on {order.paidAt}</Message>: <Message variant='danger'>Not Paid</Message>}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ? <Message>Your cart is empty</Message> : (\r\n                                <ListGroup>\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n                                                <Col md={4}>    \r\n                                                    <strong>{item.qty} X ${item.price} = ${item.qty * item.price} </strong>                                               \r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items: </Col>\r\n                                    <Col>${order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader/>}\r\n                                    {!sdkReady ? (\r\n                                        <Loader/> \r\n                                    ) : (\r\n                                        <PayPalButton amount={order.totalPrice} currency='BRL' onSuccess={onSuccessHandler}/>\r\n                                        \r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n                            \r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderScreen\r\n","C:\\Users\\Moab\\Documents\\react-course\\ecommerce with MERN\\frontend\\src\\Screens\\UserListScreen.js",[],{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"157","replacedBy":"161"},{"ruleId":"159","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":9,"column":10,"nodeType":"165","messageId":"166","endLine":9,"endColumn":31},{"ruleId":"163","severity":1,"message":"167","line":7,"column":10,"nodeType":"165","messageId":"166","endLine":7,"endColumn":16},{"ruleId":"163","severity":1,"message":"168","line":7,"column":52,"nodeType":"165","messageId":"166","endLine":7,"endColumn":65},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],["169"],["170"],"no-unused-vars","'ORDER_DETAILS_REQUEST' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'ListGroupItem' is defined but never used.","no-global-assign","no-unsafe-negation"]